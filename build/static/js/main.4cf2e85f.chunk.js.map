{"version":3,"sources":["logo.svg","Game.js","ControlPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Game","players","move","amount","currentPlayerIndex","pickUpTreasure","board","putDownTreasure","treasureIndex","turnAround","endTurn","createPlayers","map","x","Player","name","colour","finishExcursion","console","log","this","killStrandedPlayers","tidyEmptySpaces","startNextExcursion","excursionCount","resetOxygenLevel","i","length","player","JSON","stringify","isHomeSafe","direction","finishGame","isOver","getFinalScores","playerCount","calculateFinalScore","treasureStore","finalScore","valueScore","j","path","filter","space","treasure","Submarine","isAlive","kill","treasureBag","Space","setTreasure","push","checkIfEveryoneIsHome","safePlayers","checkTheresStillOxygen","oxygenLevel","Board","oxygenDeplete","game","overrideNumber","roll","spacesToGo","combineRollAndSpeedPenalty","setTimeout","moveOneSpace","currentLocation","getLocation","splice","some","item","possibleValues","Math","floor","random","directionFactor","stillNeedToMove","nextLocation","e","spaceIsHabitable","markHomeifNextLocationSubmarine","markHomeSafe","spaceIndex","spaceHasNoPlayersInIt","spaceIsSubmarine","spaceIsBottomOfBoard","combinedTreasureBagAndStore","score","arrangeSpaces","spaces","submarine","i1","tileSet","i2","valueScores","Treasure","valueLevel","shuffletileSet","shuffle","a","ControlPanel","putDownButtons","pickUpButton","currentPlayer","currentTile","index","key","onClick","playerInfo","playerBag","join","className","App","props","updateDisplay","setState","renderId","state","displayPlayers","tile","style","backgroundColor","toLowerCase","displayPath","type","playerElements","valueLabelElement","Array","isArray","cx","window","setInterval","React","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cf2e85f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default class Game {\n  constructor(players) {\n    console.log(this);\n    this.players = this.createPlayers(players);\n    this.board = new Board(this.players);\n    this.excursionCount = 1;\n    this.oxygenLevel = 25;\n    this.isOver = false;\n    this.currentPlayerIndex = 0;\n    // this.excursionIsActive = true;\n    console.log(\"game created: \" + JSON.stringify(this));\n  }\n\n  move = amount => {\n    this.players[this.currentPlayerIndex].move(this, amount);\n  };\n\n  pickUpTreasure = () => {\n    this.players[this.currentPlayerIndex].pickUpTreasure(this.board);\n  };\n\n  putDownTreasure = treasureIndex => {\n    this.players[this.currentPlayerIndex].pickUpTreasure(\n      treasureIndex,\n      this.board\n    );\n  };\n\n  turnAround = () => {\n    this.players[this.currentPlayerIndex].turnAround();\n  };\n\n  endTurn = () => {\n    this.currentPlayerIndex = 1 - this.currentPlayerIndex;\n  };\n\n  createPlayers = function(players) {\n    return players.map(x => new Player(x.name, x.colour));\n  };\n\n  finishExcursion = function() {\n    console.log(\"Called finishExcursion\");\n    // this.excursionIsActive = false;\n    this.killStrandedPlayers();\n    this.tidyEmptySpaces();\n    this.startNextExcursion();\n  };\n\n  startNextExcursion = function() {\n    console.log(\"called startNextExcursion\");\n    console.log(\"excursion count: \" + this.excursionCount);\n    if (this.excursionCount < 3) {\n      this.excursionCount++;\n      this.resetOxygenLevel();\n      for (let i = 0; i < this.players.length; i++) {\n        let player = this.players[i];\n        console.log(JSON.stringify(player));\n        player.isHomeSafe = false;\n        player.direction = \"down\";\n      }\n    } else this.finishGame();\n  };\n\n  finishGame = function() {\n    this.isOver = true;\n    console.log(\"GAME OVER\\n\\n\\n\\n\\nGAME OVER\");\n    this.getFinalScores();\n  };\n\n  getFinalScores = function() {\n    var players = this.players;\n    var playerCount = this.players.length;\n    for (let i = 0; i < playerCount; i++) {\n      let player = players[i];\n      console.log(\n        player.name +\n          \" final score: \" +\n          this.calculateFinalScore(player.treasureStore)\n      );\n    }\n  };\n\n  calculateFinalScore = function(treasureStore) {\n    console.log(\"calculateFinalScore called\");\n    // TO DO: MAKE THIS WORK\n    // what if someone picks up a bundle and then dies and then the bundle is part of another bundle?\n    var finalScore = 0;\n    console.log(\"treasureStore length: \" + treasureStore.length);\n    for (let i = 0; i < treasureStore.length; i++) {\n      console.log(treasureStore[i]);\n      if (treasureStore[i].valueScore) {\n        finalScore = finalScore + treasureStore[i].valueScore;\n        console.log(i);\n      }\n      if (i.length > 0) {\n        for (let j = 0; j < i.length; j++) {\n          if (i[j].valueScore) {\n            finalScore = finalScore + i[j].valueScore;\n            console.log(j);\n          }\n        }\n      }\n    }\n    return finalScore;\n  };\n\n  tidyEmptySpaces = function() {\n    //TO DO: reintroduce tidy empty spaces in a way that doesn't kill  my dudes on the submarine\n    console.log(\"called tidyEmptySpaces\");\n    this.board.path = this.board.path.filter(\n      space => space.treasure || space instanceof Submarine\n    );\n    // remove all dead createPlayers\n    console.log(\"tidyEmptySpaces: \" + JSON.stringify(this.board.path[0]));\n    for (let i = 1; i < this.board.path.length; i++) {\n      this.board.path[i].players = [];\n    }\n  };\n\n  killStrandedPlayers = function() {\n    // TODO: refactor\n    console.log(\"called killlllll\");\n    for (let i = 0; i < this.players.length; i++) {\n      let player = this.players[i];\n      if (!player.isHomeSafe) {\n        player.isAlive = player.kill();\n        if (player.treasureBag.length > 0) {\n          var space = new Space();\n          space.setTreasure(player.treasureBag);\n          this.board.path.push(space);\n          console.log(\"pushing \" + JSON.stringify(player) + \" to the sub\");\n          console.log(JSON.stringify(this.board.path[0]));\n\n          this.board.path[0].players.push(player);\n          console.log(JSON.stringify(this.board.path[0]));\n          player.treasureBag = [];\n          // TODO: make the set direction happen ehen the player is properly dead. make sure people cant start excursion 2 before everyone finishes excursion 1\n          player.direction = \"down\";\n          player.isHomeSafe = false;\n        }\n      }\n    }\n  };\n\n  checkIfEveryoneIsHome = function() {\n    console.log(\"checkIfEveryoneIsHome called\");\n    var playerCount = this.players.length;\n    console.log(\"playerCount: \" + playerCount);\n    var safePlayers = 0;\n    console.log(\"safePlayers: \" + safePlayers);\n\n    for (let i = 0; i < playerCount; i++) {\n      let player = this.players[i];\n      if (player.isHomeSafe) {\n        safePlayers++;\n        console.log(\"safePlayers: \" + safePlayers);\n      }\n    }\n    if (playerCount == safePlayers) {\n      this.finishExcursion();\n    }\n    // console.log(playerCount);\n    // if(this.players.some(player => player.isHomeSafe == false)){\n    //   this.finishExcursion();\n    // }\n  };\n\n  checkTheresStillOxygen = function() {\n    if (this.oxygenLevel <= 0) {\n      this.finishExcursion();\n    }\n  };\n\n  resetOxygenLevel = function() {\n    console.log(\"reset the oxygen level\");\n    this.oxygenLevel = 25;\n  };\n}\n\nexport class Player {\n  constructor(name, colour) {\n    this.name = name;\n    this.colour = colour;\n    // treasureBag is what you keep on you during an excursion\n    this.treasureBag = [];\n    this.currentLocation = 0;\n    // treasureStore is what you've safely got back to the sub\n    this.treasureStore = [];\n    this.score = 0;\n    this.direction = \"down\";\n    this.isAlive = true;\n    this.isHomeSafe = false;\n    console.log(\"player created: \" + JSON.stringify(this));\n  }\n\n  kill = function() {\n    console.log(\"called kill on \" + this.name);\n    // this.treasureBag = [];\n    this.isAlive = false;\n  };\n\n  oxygenDeplete = function(game) {\n    game.oxygenLevel = game.oxygenLevel - this.treasureBag.length;\n    console.log(\"oxygen level: \" + game.oxygenLevel);\n  };\n\n  turnAround = function() {\n    console.log(this.name + \" has turned around!\");\n    this.direction = \"up\";\n  };\n\n  move = function(game, overrideNumber) {\n    console.log(\"called move on \" + this.name);\n    if (this.isHomeSafe) {\n      console.log(\"do not move, \" + this.name + \" already home safe\");\n      return;\n    }\n    this.oxygenDeplete(game);\n    var roll = this.roll();\n    if (overrideNumber) {\n      console.log(\"override roll with: \" + overrideNumber);\n      roll = overrideNumber;\n    }\n    var spacesToGo = this.combineRollAndSpeedPenalty(roll);\n    console.log(\"spaces to go: \" + spacesToGo);\n    while (\n      spacesToGo > 0\n      // && game.excursionIsActive\n    ) {\n      setTimeout(() => {\n        this.moveOneSpace(game.board);\n      }, spacesToGo * 50);\n      spacesToGo--;\n      // console.log(\"spaces to go: \" + spacesToGo)\n    }\n    game.checkIfEveryoneIsHome();\n    game.checkTheresStillOxygen();\n  };\n\n  combineRollAndSpeedPenalty = function(roll) {\n    var roll = roll - this.treasureBag.length;\n    if (roll < 0) {\n      roll = 0;\n    }\n    return roll;\n  };\n\n  pickUpTreasure = function(board) {\n    // TO DO add better handling for when there's no treasure\n    var currentLocation = this.getLocation(board);\n    if (board.path[currentLocation].treasure) {\n      this.treasureBag.push(board.path[currentLocation].treasure);\n      board.path[currentLocation].treasure = null;\n      console.log(\"picked Up Treasure!!!!!!!!!!!!\");\n    } else {\n      console.log(\"no treasure to pick up, dummy\");\n    }\n    console.log(this.treasureBag);\n  };\n\n  putDownTreasure = function(treasureIndex, board) {\n    var currentLocation = this.getLocation(board);\n    if (board.path[currentLocation].treasure) {\n      console.log(\"there is already treasure here, so you cannot put down\");\n    } else {\n      board.path[currentLocation].treasure = this.treasureBag[treasureIndex];\n      this.treasureBag.splice(treasureIndex, 1);\n    }\n    console.log(this.treasureBag);\n  };\n\n  getLocation = function(board) {\n    // console.log(\"get location called\")\n    var location = \"not found\";\n    for (let i = 0; i < board.path.length; i++) {\n      if (\n        board.path[i].players.some(\n          item => item.colour == this.colour && item.name == this.name\n        )\n      ) {\n        location = i;\n        // console.log(this.name + \" is at path index \"+location);\n        return location;\n      }\n    }\n  };\n\n  roll = function() {\n    var possibleValues = [1, 2, 3];\n    var dice1 =\n      possibleValues[Math.floor(Math.random() * possibleValues.length)];\n    var dice2 =\n      possibleValues[Math.floor(Math.random() * possibleValues.length)];\n    var distance = dice1 + dice2;\n    // console.log(this.name + \" rolled a \" + distance);\n    return distance;\n  };\n\n  moveOneSpace = function(board) {\n    // TODO: refactor this horrible mess\n    // console.log(\"moveOneSpace called\");\n    var stillNeedToMove = true;\n    var directionFactor;\n    if (this.direction == \"down\") {\n      // console.log(\"checked direction: still going down\");\n      directionFactor = 1;\n    } else {\n      // console.log(\"checked direction: going up now\");\n      directionFactor = -1;\n    }\n    var currentLocation = this.getLocation(board);\n    // console.log(\"currentLocation before while loop: \"+currentLocation);\n    var nextLocation = currentLocation + directionFactor;\n    if (\n      (this.direction == \"down\" && nextLocation >= board.path.length) ||\n      (this.direction == \"up\" && currentLocation == 0)\n    ) {\n      stillNeedToMove = false;\n    }\n\n    while (stillNeedToMove) {\n      // pick the player up\n      board.path[currentLocation].players = board.path[\n        currentLocation\n      ].players.filter(e => e.colour !== this.colour);\n      if (this.spaceIsHabitable(board, nextLocation)) {\n        board.path[nextLocation].players.push(this);\n        this.currentLocation = nextLocation;\n        stillNeedToMove = false;\n        console.log(this.name + \" is at space index \" + nextLocation);\n        this.markHomeifNextLocationSubmarine(nextLocation);\n      } else {\n        currentLocation = nextLocation;\n        nextLocation = currentLocation + directionFactor;\n      }\n    }\n  };\n\n  markHomeifNextLocationSubmarine = function(nextLocation) {\n    if (nextLocation == 0) {\n      this.markHomeSafe();\n    }\n  };\n\n  spaceIsHabitable = function(board, spaceIndex) {\n    return (\n      this.spaceHasNoPlayersInIt(board, spaceIndex) ||\n      this.spaceIsSubmarine(board, spaceIndex) ||\n      this.spaceIsBottomOfBoard(board, spaceIndex)\n    );\n  };\n\n  spaceHasNoPlayersInIt = function(board, spaceIndex) {\n    return board.path[spaceIndex].players.length == 0;\n  };\n\n  spaceIsSubmarine = function(board, spaceIndex) {\n    return board.path[spaceIndex] instanceof Submarine;\n  };\n\n  spaceIsBottomOfBoard = function(board, spaceIndex) {\n    return spaceIndex == board.path.length - 1;\n  };\n\n  markHomeSafe = function() {\n    this.isHomeSafe = true;\n    var combinedTreasureBagAndStore = this.treasureStore;\n    combinedTreasureBagAndStore.push(this.treasureBag);\n    this.treasureStore = combinedTreasureBagAndStore;\n    this.treasureBag = [];\n    console.log(this.name + \" is home safe!\");\n  };\n}\n\nexport class Board {\n  constructor(players) {\n    this.submarine = new Submarine(players);\n    this.tileSet = [\n      {\n        valueLevel: 1,\n        valueScores: [0, 0, 1, 1, 2, 2, 3, 3]\n      },\n      {\n        valueLevel: 2,\n        valueScores: [4, 4, 5, 5, 6, 6, 7, 7]\n      },\n      {\n        valueLevel: 3,\n        valueScores: [8, 8, 9, 9, 10, 10, 11, 11]\n      },\n      {\n        valueLevel: 4,\n        valueScores: [12, 12, 13, 13, 14, 14, 15, 15]\n      }\n    ];\n    this.shuffletileSet(this.tileSet);\n    this.path = this.arrangeSpaces();\n    console.log(\"board created: \" + JSON.stringify(this));\n  }\n\n  arrangeSpaces = function() {\n    var spaces = [this.submarine];\n    for (let i1 = 0; i1 < this.tileSet.length; i1++) {\n      for (let i2 = 0; i2 < this.tileSet[i1].valueScores.length; i2++) {\n        var space = new Space();\n        var treasure = new Treasure(\n          this.tileSet[i1].valueLevel,\n          this.tileSet[i1].valueScores[i2]\n        );\n        space.setTreasure(treasure);\n        spaces.push(space);\n      }\n    }\n    return spaces;\n  };\n\n  shuffletileSet = function(tileSet) {\n    return tileSet.map(x => ({\n      ...x,\n      valueScores: this.shuffle(x.valueScores)\n    }));\n  };\n\n  shuffle = function(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  };\n}\n\nexport class Submarine {\n  constructor(players) {\n    this.players = players;\n    this.treasure = null;\n    console.log(\"Submarine created: \" + JSON.stringify(this));\n  }\n}\n\nexport class Space {\n  constructor() {\n    this.treasure = null;\n    this.players = [];\n    console.log(\"Space created: \" + JSON.stringify(this));\n  }\n  setTreasure = function(treasure) {\n    console.log(\"setTreasure called\");\n    this.treasure = treasure;\n  };\n}\n\nexport class Treasure {\n  constructor(valueLevel, valueScore) {\n    this.valueLevel = valueLevel;\n    this.valueScore = valueScore;\n    console.log(\"Treasure created: \" + JSON.stringify(this));\n  }\n}\n","import React from \"react\";\n\nexport default function ControlPanel({ game }) {\n  let putDownButtons = null;\n  let pickUpButton = null;\n\n  const currentPlayer = game.players[game.currentPlayerIndex];\n  const currentTile = game.board.path[currentPlayer.currentLocation];\n\n  if (currentPlayer.treasureBag.length > 0) {\n    putDownButtons = currentPlayer.treasureBag.map((treasure, index) => {\n      return (\n        <button key={index} onClick={e => game.putDownTreasure(index)}>\n          Put Down Treasure Of Level {treasure.valueLevel}\n        </button>\n      );\n    });\n  }\n\n  if (currentTile.treasure) {\n    pickUpButton = (\n      <button onClick={e => game.pickUpTreasure()}>Pick Up Treasure</button>\n    );\n  }\n\n  const playerInfo = game.players.map((player, index) => {\n    let playerBag = \"Nothing\";\n    if (player.treasureBag.length > 0) {\n      playerBag = player.treasureBag\n        .map(treasure => treasure.valueLevel)\n        .join(\", \");\n    }\n    return (\n      <>\n        <p>\n          Player {index + 1} Store: {JSON.stringify(player.treasureStore)}\n        </p>\n        <p>\n          Player {index + 1} Bag: {playerBag}\n        </p>\n      </>\n    );\n  });\n\n  return (\n    <div className=\"control-panel\">\n      <div className=\"player-status\">{playerInfo}</div>\n      <br />\n      <button onClick={e => game.move()}>Move</button>\n      <button onClick={e => game.turnAround()}>Turn Around</button>\n      {pickUpButton}\n      {putDownButtons}\n      <button onClick={e => game.endTurn()}>End Turn</button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport cx from \"classnames\";\n\nimport Game from \"./Game\";\nimport ControlPanel from \"./ControlPanel\";\nimport { Player, Space, Submarine, Treasure, Board } from \"./Game\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.currentPlayerIndex = 0;\n    this.state = {\n      renderId: 0\n    };\n\n    this.game = new Game([\n      { name: \"Chris\", colour: \"Red\" },\n      { name: \"Sophie\", colour: \"Green\" }\n    ]);\n    window.game = this.game;\n\n    setInterval(this.updateDisplay, 10);\n  }\n\n  updateDisplay = () => {\n    this.setState({ renderId: this.state.renderId++ });\n  };\n\n  displayPlayers = tile => {\n    return tile.players.map((player, index) => {\n      return (\n        <div\n          key={index}\n          className=\"player\"\n          style={{ backgroundColor: player.colour.toLowerCase() }}\n        >\n          <span className=\"direction\">\n            {player.direction === \"down\" ? \">\" : \"<\"}\n          </span>\n          <p className=\"name\">{player.name}</p>\n        </div>\n      );\n    });\n  };\n\n  displayPath = () => {\n    return this.game.board.path.map((tile, index) => {\n      let type = \"\";\n      if (tile instanceof Submarine) {\n        type = \"submarine\";\n      } else if (tile instanceof Space) {\n        type = \"space\";\n      }\n\n      let playerElements = this.displayPlayers(tile);\n\n      let valueLabelElement = \"\";\n      if (tile.treasure) {\n        if (Array.isArray(tile.treasure)) {\n          valueLabelElement = tile.treasure\n            .map(treasure => treasure.valueLevel)\n            .join(\", \");\n        } else {\n          valueLabelElement = tile.treasure.valueLevel;\n        }\n      }\n\n      return (\n        <div key={index} className={cx(\"tile-item\", type)}>\n          <p className=\"value-level\">{valueLabelElement}</p>\n          {playerElements}\n        </div>\n      );\n    });\n  };\n\n  render() {\n    // console.log(this.game);\n\n    const path = this.displayPath();\n    return (\n      <div className=\"game-container\">\n        <div className=\"title\">Deep Sea Adventure</div>\n        <ControlPanel game={this.game} />\n        {path}\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}